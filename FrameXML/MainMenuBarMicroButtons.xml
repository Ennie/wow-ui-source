<Ui xmlns="http://www.blizzard.com/wow/ui/" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.blizzard.com/wow/ui/
..\FrameXML\UI.xsd">
	<Script file="MainMenuBarMicroButtons.lua"/>
	<Button name="MainMenuBarMicroButton" motionScriptsWhileDisabled="true" virtual="true">
		<Size>
			<AbsDimension x="28" y="58"/>
		</Size>
		<HitRectInsets>
			<AbsInset left="0" right="0" top="18" bottom="0"/>
		</HitRectInsets>
		<Layers>
			<Layer level="OVERLAY">
				<Texture name="$parentFlash" file="Interface\Buttons\Micro-Highlight" alphaMode="ADD" parentKey="Flash" hidden="true">
					<Size x="64" y="64"/>
					<Anchors>
						<Anchor point="TOPLEFT" x="-2" y="-18"/>
					</Anchors>
				</Texture>
			</Layer>
		</Layers>
		<Scripts>
			<OnEnter>
				if ( self:IsEnabled() or self.minLevel or self.disabledTooltip ) then
					GameTooltip_AddNewbieTip(self, self.tooltipText, 1.0, 1.0, 1.0, self.newbieText);
					GameTooltip:AddLine(" ");
					if ( not self:IsEnabled() ) then
						if ( self.minLevel ) then
							GameTooltip:AddLine(format(FEATURE_BECOMES_AVAILABLE_AT_LEVEL, self.minLevel), RED_FONT_COLOR.r, RED_FONT_COLOR.g, RED_FONT_COLOR.b, true);
							GameTooltip:Show();
						elseif ( self.disabledTooltip ) then
							GameTooltip:AddLine(self.disabledTooltip, RED_FONT_COLOR.r, RED_FONT_COLOR.g, RED_FONT_COLOR.b, true);
							GameTooltip:Show();
						end
					end
				end
			</OnEnter>
			<OnEnable>
				self:SetAlpha(1);
			</OnEnable>
			<OnDisable>
				self:SetAlpha(0.5);
			</OnDisable>
			<OnLeave>
				GameTooltip:Hide();
			</OnLeave>
		</Scripts>
	</Button>
	<Button name="CharacterMicroButton" inherits="MainMenuBarMicroButton" parent="MainMenuBarArtFrame">
		<Anchors>
			<Anchor point="BOTTOMLEFT">
				<Offset>
					<AbsDimension x="548" y="2"/>
				</Offset>
			</Anchor>
		</Anchors>
		<Layers>
			<Layer level="OVERLAY">
                <Texture name="MicroButtonPortrait">
                    <Size>
                        <AbsDimension x="18" y="25"/>
                    </Size>
                    <Anchors>
                        <Anchor point="TOP">
                            <Offset>
                                <AbsDimension x="0" y="-28"/>
                            </Offset>
                        </Anchor>
                    </Anchors>
					<TexCoords left="0.2" right="0.8" top="0.0666" bottom="0.9"/>
                </Texture>
            </Layer>
		</Layers>
		<Scripts>
			<OnLoad function="CharacterMicroButton_OnLoad"/>
			<OnMouseDown>
				if ( self.down ) then
					self.down = nil;
					ToggleCharacter("PaperDollFrame");
					return;
				end
				CharacterMicroButton_SetPushed();
				self.down = 1;
			</OnMouseDown>
			<OnMouseUp>
				if ( self.down ) then
					self.down = nil;
					if ( self:IsMouseOver() ) then
						ToggleCharacter("PaperDollFrame");
					end
					UpdateMicroButtons();
					return;
				end
				if ( self:GetButtonState() == "NORMAL" ) then
					CharacterMicroButton_SetPushed();
					self.down = 1;
				else
					CharacterMicroButton_SetNormal();
					self.down = 1;
				end
			</OnMouseUp>
			<OnEvent function="CharacterMicroButton_OnEvent"/>
		</Scripts>
	</Button>
	<Button name="SpellbookMicroButton" inherits="MainMenuBarMicroButton" parent="MainMenuBarArtFrame">
		<Anchors>
			<Anchor point="BOTTOMLEFT" relativeTo="CharacterMicroButton" relativePoint="BOTTOMRIGHT">
				<Offset>
					<AbsDimension x="-3" y="0"/>
				</Offset>
			</Anchor>
		</Anchors>
		<Scripts>
			<OnLoad>
				LoadMicroButtonTextures(self, "Spellbook");
			</OnLoad>
			<OnClick>
				ToggleSpellBook(BOOKTYPE_SPELL);
			</OnClick>
			<OnEnter>
				self.tooltipText = MicroButtonTooltipText(SPELLBOOK_ABILITIES_BUTTON, "TOGGLESPELLBOOK");
				GameTooltip_AddNewbieTip(self, self.tooltipText, 1.0, 1.0, 1.0, NEWBIE_TOOLTIP_SPELLBOOK);
			</OnEnter>
		</Scripts>
	</Button>
	<Button name="TalentMicroButton" inherits="MainMenuBarMicroButton" parent="MainMenuBarArtFrame">
		<Anchors>
			<Anchor point="BOTTOMLEFT" relativeTo="SpellbookMicroButton" relativePoint="BOTTOMRIGHT">
				<Offset>
					<AbsDimension x="-3" y="0"/>
				</Offset>
			</Anchor>
		</Anchors>
		<Scripts>
			<OnLoad>
				LoadMicroButtonTextures(self, "Talents");
				self.tooltipText = MicroButtonTooltipText(TALENTS_BUTTON, "TOGGLETALENTS");
				self.newbieText = NEWBIE_TOOLTIP_TALENTS;
				
				local _, class = UnitClass("player");
				if (class == "DEATHKNIGHT") then
					self.disabledTooltip = TALENTS_UNAVAILABLE_TOOLTIP;
				else
					self.minLevel = SHOW_TALENT_LEVEL;
				end
				self:RegisterEvent("PLAYER_LEVEL_UP");
				self:RegisterEvent("UPDATE_BINDINGS");
				self:RegisterEvent("PLAYER_TALENT_UPDATE");
			</OnLoad>
			<OnClick function="ToggleTalentFrame"/>
			<OnEvent function="TalentMicroButton_OnEvent"/>
		</Scripts>
	</Button>
	<Button name="AchievementMicroButton" inherits="MainMenuBarMicroButton" parent="MainMenuBarArtFrame">
		<Anchors>
			<Anchor point="BOTTOMLEFT" relativeTo="TalentMicroButton" relativePoint="BOTTOMRIGHT">
				<Offset>
					<AbsDimension x="-3" y="0"/>
				</Offset>
			</Anchor>
		</Anchors>
		<Scripts>
			<OnLoad>
				LoadMicroButtonTextures(self, "Achievement");
				self:RegisterEvent("RECEIVED_ACHIEVEMENT_LIST");
				self:RegisterEvent("ACHIEVEMENT_EARNED");
				self:RegisterEvent("UPDATE_BINDINGS");
				self.tooltipText = MicroButtonTooltipText(ACHIEVEMENT_BUTTON, "TOGGLEACHIEVEMENT");
				self.newbieText = NEWBIE_TOOLTIP_ACHIEVEMENT;
				self.minLevel = 10;	--Just used for display. But we know that it will become available by level 10 due to the level 10 achievement.
			</OnLoad>
			<OnEvent function="AchievementMicroButton_OnEvent"/>
			<OnClick> 
				ToggleAchievementFrame();
			</OnClick>
		</Scripts>
	</Button>
	<Button name="QuestLogMicroButton" inherits="MainMenuBarMicroButton" parent="MainMenuBarArtFrame">
		<Anchors>
			<Anchor point="BOTTOMLEFT" relativeTo="AchievementMicroButton" relativePoint="BOTTOMRIGHT">
				<Offset>
					<AbsDimension x="-3" y="0"/>
				</Offset>
			</Anchor>
		</Anchors>
		<Scripts>
			<OnLoad>
				LoadMicroButtonTextures(self, "Quest");
				self.tooltipText = MicroButtonTooltipText(QUESTLOG_BUTTON, "TOGGLEQUESTLOG");
				self.newbieText = NEWBIE_TOOLTIP_QUESTLOG;
			</OnLoad>
			<OnEvent>
				self.tooltipText = MicroButtonTooltipText(QUESTLOG_BUTTON, "TOGGLEQUESTLOG");
			</OnEvent>
			<OnClick>
				ToggleFrame(QuestLogFrame);
			</OnClick>
		</Scripts>
	</Button>
	<Button name="GuildMicroButton" inherits="MainMenuBarMicroButton" parent="MainMenuBarArtFrame">
		<Anchors>
			<Anchor point="BOTTOMLEFT" relativeTo="QuestLogMicroButton" relativePoint="BOTTOMRIGHT">
				<Offset>
					<AbsDimension x="-3" y="0"/>
				</Offset>
			</Anchor>
		</Anchors>
		<Frames>
			<Frame name="$parentTabard" hidden="true">
				<Size>
					<AbsDimension x="28" y="58"/>
				</Size>
				<Anchors>
					<Anchor point="TOPLEFT"/>
				</Anchors>
				<Layers>
					<Layer level="ARTWORK">
						<Texture name="$parentBackground" file="Interface\Buttons\UI-MicroButton-Guild-Banner" parentKey="background">
							<Size>
								<AbsDimension x="30" y="60"/>
							</Size>
							<Anchors>
								<Anchor point="CENTER" x="0" y="0"/>
							</Anchors>
						</Texture>
					</Layer>
					<Layer level="OVERLAY" textureSubLevel="1">
						<Texture name="$parentEmblem" parentKey="emblem" file="Interface\GuildFrame\GuildEmblems_01">
							<Size x="16" y="16"/>
							<Anchors>
								<Anchor point="CENTER" x="0" y="-9"/>
							</Anchors>
						</Texture>
					</Layer>
				</Layers>
			</Frame>
		</Frames>
		<Scripts>
			<OnLoad>
				LoadMicroButtonTextures(self, "Socials");
				self.tooltipText = MicroButtonTooltipText(LOOKINGFORGUILD, "TOGGLEGUILDTAB");
				self.newbieText = NEWBIE_TOOLTIP_LOOKINGFORGUILDTAB;
				self:RegisterEvent("UPDATE_BINDINGS");
				self:RegisterEvent("PLAYER_GUILD_UPDATE");
				GuildMicroButton_UpdateTabard(true);
				if ( IsTrialAccount() ) then
					self:Disable();
					self.disabledTooltip = ERR_RESTRICTED_ACCOUNT;
				end
			</OnLoad>
			<OnEvent function="GuildMicroButton_OnEvent"/>
			<OnClick>
				ToggleGuildFrame();
			</OnClick>
		</Scripts>
	</Button>
	<Button name="PVPMicroButton" inherits="MainMenuBarMicroButton" parent="MainMenuBarArtFrame">
		<Anchors>
			<Anchor point="BOTTOMLEFT" relativeTo="GuildMicroButton" relativePoint="BOTTOMRIGHT">
				<Offset>
					<AbsDimension x="-3" y="0"/>
				</Offset>
			</Anchor>
		</Anchors>
		<Layers>
			<Layer level="OVERLAY">
                <Texture name="$parentTexture" parentKey="texture">
                    <Size>
                        <AbsDimension x="36" y="36"/>
                    </Size>
                    <Anchors>
                        <Anchor point="TOP">
                            <Offset>
                                <AbsDimension x="6" y="-30"/>
                            </Offset>
                        </Anchor>
                    </Anchors>
                </Texture>
            </Layer>
		</Layers>
		<Scripts>
			<OnLoad>
				self:RegisterEvent("UPDATE_BINDINGS");
				
				self:SetNormalTexture("Interface\\Buttons\\UI-MicroButtonCharacter-Up");
				self:SetPushedTexture("Interface\\Buttons\\UI-MicroButtonCharacter-Down");
				self:SetHighlightTexture("Interface\\Buttons\\UI-MicroButton-Hilight");
				local factionGroup = UnitFactionGroup("player");
				if ( factionGroup ) then
					_G[self:GetName().."Texture"]:SetTexture("Interface\\TargetingFrame\\UI-PVP-"..factionGroup);
				end
				self.tooltipText = MicroButtonTooltipText(PLAYER_V_PLAYER, "TOGGLECHARACTER4");
				self.newbieText = NEWBIE_TOOLTIP_PVP;
				self.minLevel = SHOW_PVP_LEVEL;
			</OnLoad>
			<OnEvent>
				self.tooltipText = MicroButtonTooltipText(PLAYER_V_PLAYER, "TOGGLECHARACTER4");
				self.newbieText = NEWBIE_TOOLTIP_PVP;
			</OnEvent>
			<OnMouseDown>
				if ( self:IsEnabled() ~= 0 ) then
					if ( self.down ) then
						self.down = nil;
						TogglePVPFrame();
						return;
					end
					PVPMicroButton_SetPushed();
					self.down = 1;
				end
			</OnMouseDown>
			<OnMouseUp>
				if ( self:IsEnabled() ~= 0 ) then
					if ( self.down ) then
						self.down = nil;
						if ( self:IsMouseOver() ) then
							TogglePVPFrame();
						end
						UpdateMicroButtons();
						return;
					end
					if ( self:GetButtonState() == "NORMAL" ) then
						PVPMicroButton_SetPushed();
						self.down = 1;
					else
						PVPMicroButton_SetNormal();
						self.down = 1;
					end
				end
			</OnMouseUp>
			<OnEnable>
				self:SetAlpha(1);
				SetDesaturation(self.texture, false);
			</OnEnable>
			<OnDisable>
				self:SetAlpha(0.5);
				SetDesaturation(self.texture, true);
			</OnDisable>
		</Scripts>
	</Button>
	<Button name="LFDMicroButton" inherits="MainMenuBarMicroButton" parent="MainMenuBarArtFrame">
		<Anchors>
			<Anchor point="BOTTOMLEFT" relativeTo="PVPMicroButton" relativePoint="BOTTOMRIGHT">
				<Offset>
					<AbsDimension x="-3" y="0"/>
				</Offset>
			</Anchor>
		</Anchors>
		<Scripts>
			<OnLoad>
				LoadMicroButtonTextures(self, "LFG");
				SetDesaturation(self:GetDisabledTexture(), true);
				self.tooltipText = MicroButtonTooltipText(DUNGEONS_BUTTON, "TOGGLELFGPARENT");
				self.newbieText = NEWBIE_TOOLTIP_LFGPARENT;
				self.minLevel = SHOW_LFD_LEVEL;
			</OnLoad>
			<OnEvent>
				self.tooltipText = MicroButtonTooltipText(DUNGEONS_BUTTON, "TOGGLELFGPARENT");
				self.newbieText = NEWBIE_TOOLTIP_LFGPARENT;
			</OnEvent>
			<OnClick>
				ToggleLFDParentFrame();
			</OnClick>
		</Scripts>
	</Button>
	<Button name="RaidMicroButton" inherits="MainMenuBarMicroButton" parent="MainMenuBarArtFrame">
		<Anchors>
			<Anchor point="BOTTOMLEFT" relativeTo="LFDMicroButton" relativePoint="BOTTOMRIGHT">
				<Offset>
					<AbsDimension x="-3" y="0"/>
				</Offset>
			</Anchor>
		</Anchors>
		<Scripts>
			<OnLoad>
				LoadMicroButtonTextures(self, "Raid");
				SetDesaturation(self:GetDisabledTexture(), true);
				self.tooltipText = MicroButtonTooltipText(RAID_FINDER, "TOGGLERAIDFINDER");
				self.newbieText = NEWBIE_TOOLTIP_RAID_FINDER;
				self.minLevel = SHOW_LFD_LEVEL;
			</OnLoad>
			<OnEvent>
				self.tooltipText = MicroButtonTooltipText(RAID_FINDER, "TOGGLERAIDFINDER");
				self.newbieText = NEWBIE_TOOLTIP_RAID_FINDER;
			</OnEvent>
			<OnClick>
				ToggleRaidFrame();
			</OnClick>
		</Scripts>
	</Button>
	<Button name="EJMicroButton" inherits="MainMenuBarMicroButton" parent="MainMenuBarArtFrame">
		<Anchors>
			<Anchor point="BOTTOMLEFT" relativeTo="RaidMicroButton" relativePoint="BOTTOMRIGHT">
				<Offset>
					<AbsDimension x="-3" y="0"/>
				</Offset>
			</Anchor>
		</Anchors>
		<Scripts>
			<OnLoad>
				LoadMicroButtonTextures(self, "EJ");
				SetDesaturation(self:GetDisabledTexture(), true);
				self.tooltipText = MicroButtonTooltipText(ENCOUNTER_JOURNAL, "TOGGLEENCOUNTERJOURNAL");
				self.newbieText = NEWBIE_TOOLTIP_ENCOUNTER_JOURNAL;
				self.minLevel = SHOW_LFD_LEVEL;
			</OnLoad>
			<OnEvent>
				self.tooltipText = MicroButtonTooltipText(ENCOUNTER_JOURNAL, "TOGGLEENCOUNTERJOURNAL");
				self.newbieText = NEWBIE_TOOLTIP_ENCOUNTER_JOURNAL;
			</OnEvent>
			<OnClick>
				ToggleEncounterJournal();
			</OnClick>
		</Scripts>
	</Button>
	<Button name="MainMenuMicroButton" inherits="MainMenuBarMicroButton" parent="MainMenuBarArtFrame">
		<Anchors>
			<Anchor point="BOTTOMLEFT" relativeTo="EJMicroButton" relativePoint="BOTTOMRIGHT">
				<Offset>
					<AbsDimension x="-3" y="0"/>
				</Offset>
			</Anchor>
		</Anchors>
		<Layers>
			<Layer level="OVERLAY">
				<Texture name="MainMenuBarPerformanceBar" file="Interface\MainMenuBar\UI-MainMenuBar-PerformanceBar">
					<Size>
						<AbsDimension x="14" y="7"/>
					</Size>
					<Anchors>
						<Anchor point="TOPLEFT" relativeTo="MainMenuMicroButton" relativePoint="TOPLEFT">
							<Offset x="10" y="-34"/>
						</Anchor>
					</Anchors>
				</Texture>
				<Texture name="MainMenuBarDownload" file="Interface\BUTTONS\UI-MicroStream-Yellow" hidden="true">
					<Size>
						<AbsDimension x="28" y="28"/>
					</Size>
					<Anchors>
						<Anchor point="BOTTOM" relativeTo="MainMenuMicroButton" relativePoint="BOTTOM">
							<Offset x="0" y="7"/>
						</Anchor>
					</Anchors>
				</Texture>
			</Layer>
		</Layers>
		<Scripts>
			<OnLoad>
				LoadMicroButtonTextures(self, "MainMenu");
				self.tooltipText = MicroButtonTooltipText(MAINMENU_BUTTON, "TOGGLEGAMEMENU");
				self.newbieText = NEWBIE_TOOLTIP_MAINMENU;

				PERFORMANCEBAR_LOW_LATENCY = 300;
				PERFORMANCEBAR_MEDIUM_LATENCY = 600;
				PERFORMANCEBAR_UPDATE_INTERVAL = 1;
				self.hover = nil;
				self.updateInterval = 0;
				self:RegisterForClicks("LeftButtonDown", "RightButtonDown", "LeftButtonUp", "RightButtonUp");
			</OnLoad>
			<OnUpdate>
				if (self.updateInterval > 0) then
					self.updateInterval = self.updateInterval - elapsed;
				else
					self.updateInterval = PERFORMANCEBAR_UPDATE_INTERVAL;
					status = GetFileStreamingStatus();
					if(status==0) then
						status = (GetBackgroundLoadingStatus()~=0) and 1 or 0;
					end
					if(status == 0) then
						MainMenuBarDownload:Hide();
						MainMenuBarPerformanceBar:Show();
						self:SetNormalTexture("Interface\\Buttons\\UI-MicroButton-MainMenu-Up");
						self:SetPushedTexture("Interface\\Buttons\\UI-MicroButton-MainMenu-Down");
						self:SetDisabledTexture("Interface\\Buttons\\UI-MicroButton-MainMenu-Disabled");
						local bandwidthIn, bandwidthOut, latencyHome, latencyWorld = GetNetStats();
						local latency = latencyHome > latencyWorld and latencyHome or latencyWorld;
						if (latency > PERFORMANCEBAR_MEDIUM_LATENCY) then
							MainMenuBarPerformanceBar:SetVertexColor(1, 0, 0);									
						elseif (latency > PERFORMANCEBAR_LOW_LATENCY) then
							MainMenuBarPerformanceBar:SetVertexColor(1, 1, 0);
						else
							MainMenuBarPerformanceBar:SetVertexColor(0, 1, 0);
						end
					else
						MainMenuBarPerformanceBar:Hide();
						self:SetNormalTexture("Interface\\Buttons\\UI-MicroButtonStreamDL-Up");
						self:SetPushedTexture("Interface\\Buttons\\UI-MicroButtonStreamDL-Down");
						self:SetDisabledTexture("Interface\\Buttons\\UI-MicroButtonStreamDL-Up");
						if (status == 1) then
							MainMenuBarDownload:SetTexture("Interface\\BUTTONS\\UI-MicroStream-Green");
						elseif (status == 2) then
							MainMenuBarDownload:SetTexture("Interface\\BUTTONS\\UI-MicroStream-Yellow");
						elseif (status == 3) then
							MainMenuBarDownload:SetTexture("Interface\\BUTTONS\\UI-MicroStream-Red");
						end
						MainMenuBarDownload:Show();
					end
					if (self.hover) then
						MainMenuBarPerformanceBarFrame_OnEnter(self);
					end
				end
			</OnUpdate>
			<OnEvent>
				self.tooltipText = MicroButtonTooltipText(MAINMENU_BUTTON, "TOGGLEGAMEMENU");
			</OnEvent>
			<OnMouseDown>
				if ( self.down ) then
					self.down = nil; -- I'm pretty sure none of this should ever get run.
					if ( not GameMenuFrame:IsShown() ) then
						if ( VideoOptionsFrame:IsShown() ) then
							VideoOptionsFrameCancel:Click();
						elseif ( AudioOptionsFrame:IsShown() ) then
							AudioOptionsFrameCancel:Click();
						elseif ( InterfaceOptionsFrame:IsShown() ) then
							InterfaceOptionsFrameCancel:Click();
						end		
						CloseMenus();
						CloseAllWindows()
						PlaySound("igMainMenuOpen");
						ShowUIPanel(GameMenuFrame);
					else
						PlaySound("igMainMenuQuit");
						HideUIPanel(GameMenuFrame);
						MainMenuMicroButton_SetNormal();
					end
					return;
				end
				MainMenuMicroButton_SetPushed();
				self.down = 1;
			</OnMouseDown>
			<OnMouseUp>
				if ( self.down ) then
					self.down = nil;
					if ( self:IsMouseOver() ) then
						if ( not GameMenuFrame:IsShown() ) then
							if ( VideoOptionsFrame:IsShown() ) then
								VideoOptionsFrameCancel:Click();
							elseif ( AudioOptionsFrame:IsShown() ) then
								AudioOptionsFrameCancel:Click();
							elseif ( InterfaceOptionsFrame:IsShown() ) then
								InterfaceOptionsFrameCancel:Click();
							end						
							CloseMenus();
							CloseAllWindows()
							PlaySound("igMainMenuOpen");
							ShowUIPanel(GameMenuFrame);
						else
							PlaySound("igMainMenuQuit");
							HideUIPanel(GameMenuFrame);
							MainMenuMicroButton_SetNormal();
						end
					end
					UpdateMicroButtons();
					return;
				end
				if ( self:GetButtonState() == "NORMAL" ) then
					MainMenuMicroButton_SetPushed();
					self.down = 1;
				else
					MainMenuMicroButton_SetNormal();
					self.down = 1;
				end
			</OnMouseUp>
			
			<OnEnter>
				self.hover = 1;
				self.updateInterval = 0;
			</OnEnter>
			<OnLeave>
				self.hover = nil;
				GameTooltip:Hide();
			</OnLeave>
		</Scripts>
	</Button>
	<Button name="HelpMicroButton" inherits="MainMenuBarMicroButton" parent="MainMenuBarArtFrame" hidden="false">
		<Anchors>
			<Anchor point="BOTTOMLEFT" relativeTo="MainMenuMicroButton" relativePoint="BOTTOMRIGHT">
				<Offset>
					<AbsDimension x="-3" y="0"/>
				</Offset>
			</Anchor>
		</Anchors>
		<Scripts>
			<OnLoad>
				LoadMicroButtonTextures(self, "Help");
				self.tooltipText = HELP_BUTTON;
				self.newbieText = NEWBIE_TOOLTIP_HELP;
			</OnLoad>
			<OnClick function="ToggleHelpFrame"/>
		</Scripts>
	</Button>
	
	<Frame name="TalentMicroButtonAlert" inherits="GlowBoxTemplate" parent="UIParent" enableMouse="true" hidden="true" frameStrata="DIALOG" frameLevel="2">
		<Size x="220" y="100"/>
		<Anchors>
			<Anchor point="BOTTOM" relativeTo="TalentMicroButton" relativePoint="TOP" x="0" y="-8"/>
		</Anchors>
		<Layers>
			<Layer level="OVERLAY">
				<FontString name="TalentMicroButtonAlertText" inherits="GameFontHighlightLeft" justifyV="TOP" text="TALENT_MICRO_BUTTON_TUTORIAL" >
					<Size x="188" y="0"/>
					<Anchors>
						<Anchor point="TOPLEFT" x="16" y="-24"/>
					</Anchors>
				</FontString>
			</Layer>
		</Layers>
		<Frames>
			<Button name="TalentMicroButtonAlertCloseButton" inherits="UIPanelCloseButton">
				<Anchors>
					<Anchor point="TOPRIGHT" x="6" y="6"/>
				</Anchors>
				<Scripts>
					<OnClick>
						TalentMicroButtonAlert:Hide();
					</OnClick>
				</Scripts>
			</Button>
			<Frame name="TalentMicroButtonAlertArrow" inherits="GlowBoxArrowTemplate">
				<Anchors>
					<Anchor point="TOP" relativePoint="BOTTOM" y="4"/>
				</Anchors>
			</Frame>
		</Frames>
		<Scripts>
			<OnLoad>
				TalentMicroButtonAlertText:SetSpacing(4);
			</OnLoad>
			<OnShow>
				self:SetHeight(TalentMicroButtonAlertText:GetHeight()+42);
			</OnShow>
		</Scripts>
	</Frame>
</Ui>
